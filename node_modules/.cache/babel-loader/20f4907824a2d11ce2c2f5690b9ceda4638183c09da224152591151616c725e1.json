{"ast":null,"code":"var _jsxFileName = \"/Users/giovannimasala/Desktop/Coding Projects/appointment-planner-starting-v18/src/containers/contactsPage/ContactsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\nimport { TileList } from \"../../components/tileList/TileList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ContactsPage = _ref => {\n  _s();\n  let {\n    contacts,\n    addContact\n  } = _ref;\n  const [formData, setFormData] = useState({\n    name: \"\",\n    phone: \"\",\n    email: \"\"\n  });\n  const [duplicate, setDuplicate] = useState(false);\n  const {\n    name,\n    phone,\n    email\n  } = formData;\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!duplicate) {\n      addContact(formData);\n      setFormData({\n        name: \"\",\n        phone: \"\",\n        email: \"\"\n      });\n    }\n  };\n  useEffect(() => {\n    if (contacts && name) {\n      // Check if contacts and name are truthy\n      const nameIsDuplicate = contacts.some(contact => contact.name === name);\n      setDuplicate(nameIsDuplicate);\n    }\n  }, [name, contacts]); // Dependency array\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Add Contact\", duplicate && \" - Name Already Exists\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        values: formData,\n        handleChange: e => setFormData({\n          ...formData,\n          [e.target.name]: e.target.value\n        }),\n        onSubmit: handleSubmit,\n        isDuplicate: duplicate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TileList, {\n        items: contacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ContactsPage, \"VuxZQGteW3J6OK9DwTiGjcsvX/U=\");\n_c = ContactsPage;\nvar _c;\n$RefreshReg$(_c, \"ContactsPage\");","map":{"version":3,"names":["React","useState","useEffect","ContactForm","TileList","jsxDEV","_jsxDEV","Fragment","_Fragment","ContactsPage","_ref","_s","contacts","addContact","formData","setFormData","name","phone","email","duplicate","setDuplicate","handleSubmit","e","preventDefault","nameIsDuplicate","some","contact","children","fileName","_jsxFileName","lineNumber","columnNumber","values","handleChange","target","value","onSubmit","isDuplicate","items","_c","$RefreshReg$"],"sources":["/Users/giovannimasala/Desktop/Coding Projects/appointment-planner-starting-v18/src/containers/contactsPage/ContactsPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nexport const ContactsPage = ({ contacts, addContact }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    phone: \"\",\r\n    email: \"\"\r\n  });\r\n  const [duplicate, setDuplicate] = useState(false);\r\n\r\n  const { name, phone, email } = formData;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!duplicate) {\r\n      addContact(formData);\r\n      setFormData({ name: \"\", phone: \"\", email: \"\" });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (contacts && name) { // Check if contacts and name are truthy\r\n      const nameIsDuplicate = contacts.some((contact) => contact.name === name);\r\n      setDuplicate(nameIsDuplicate);\r\n    }\r\n  }, [name, contacts]); // Dependency array\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <h2>\r\n          Add Contact\r\n          {duplicate && \" - Name Already Exists\"}\r\n        </h2>\r\n        <ContactForm\r\n          values={formData}\r\n          handleChange={(e) =>\r\n            setFormData({ ...formData, [e.target.name]: e.target.value })\r\n          }\r\n          onSubmit={handleSubmit}\r\n          isDuplicate={duplicate}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <TileList items={contacts} />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,0CAA0C;AACtE,SAASC,QAAQ,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9D,OAAO,MAAMC,YAAY,GAAGC,IAAA,IAA8B;EAAAC,EAAA;EAAA,IAA7B;IAAEC,QAAQ;IAAEC;EAAW,CAAC,GAAAH,IAAA;EACnD,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC;IACvCe,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE;EACT,CAAC,CAAC;EACF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAM;IAAEe,IAAI;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAGJ,QAAQ;EAEvC,MAAMO,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAI,CAACJ,SAAS,EAAE;MACdN,UAAU,CAACC,QAAQ,CAAC;MACpBC,WAAW,CAAC;QAAEC,IAAI,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAG,CAAC,CAAC;IACjD;EACF,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACd,IAAIU,QAAQ,IAAII,IAAI,EAAE;MAAE;MACtB,MAAMQ,eAAe,GAAGZ,QAAQ,CAACa,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACV,IAAI,KAAKA,IAAI,CAAC;MACzEI,YAAY,CAACI,eAAe,CAAC;IAC/B;EACF,CAAC,EAAE,CAACR,IAAI,EAAEJ,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEtB,oBACEN,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QAAAqB,QAAA,GAAI,aAEF,EAACR,SAAS,IAAI,wBAAwB;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACnC,eACLzB,OAAA,CAACH,WAAW;QACV6B,MAAM,EAAElB,QAAS;QACjBmB,YAAY,EAAGX,CAAC,IACdP,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAE,CAACQ,CAAC,CAACY,MAAM,CAAClB,IAAI,GAAGM,CAAC,CAACY,MAAM,CAACC;QAAM,CAAC,CAC7D;QACDC,QAAQ,EAAEf,YAAa;QACvBgB,WAAW,EAAElB;MAAU;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACvB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACM,eACVzB,OAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACNzB,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QAAAqB,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACjBzB,OAAA,CAACF,QAAQ;QAACkC,KAAK,EAAE1B;MAAS;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACrB;EAAA,gBACT;AAEP,CAAC;AAACpB,EAAA,CAhDWF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}