{"ast":null,"code":"var _jsxFileName = \"/Users/giovannimasala/Desktop/Coding Projects/appointment-planner-starting-v18/src/components/appointmentForm/AppointmentForm.js\";\nimport React from \"react\";\nimport ContactPicker from \"../contactPicker/ContactPicker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getTodayString = () => {\n  const [month, day, year] = new Date().toLocaleDateString(\"en-US\").split(\"/\");\n  return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\n};\nexport const AppointmentForm = _ref => {\n  let {\n    name,\n    contact,\n    date,\n    time,\n    onSubmit,\n    // The callback function to handle form submission\n    handleChange,\n    contacts // Assuming contacts prop for ContactPicker\n  } = _ref;\n  const handleSubmit = e => {\n    e.preventDefault(); // Prevent default form submission\n\n    // Optional: Add form validation logic here\n    // ... validation logic (e.g., check for empty fields)\n\n    // Call the provided onSubmit prop function with form data\n    onSubmit({\n      name,\n      contact,\n      date,\n      time\n    }); // Assuming props hold form data\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        value: name,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"contact\",\n        children: \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactPicker, {\n        contacts: contacts,\n        handleChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\" // Use type=\"date\" for date picker\n        ,\n        id: \"date\",\n        name: \"date\",\n        value: date,\n        onChange: handleChange,\n        min: getTodayString() // Set minimum date to today\n        ,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"time\",\n        children: \"Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        id: \"time\",\n        name: \"time\",\n        value: time,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Add Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = AppointmentForm;\nvar _c;\n$RefreshReg$(_c, \"AppointmentForm\");","map":{"version":3,"names":["React","ContactPicker","jsxDEV","_jsxDEV","Fragment","_Fragment","getTodayString","month","day","year","Date","toLocaleDateString","split","padStart","AppointmentForm","_ref","name","contact","date","time","onSubmit","handleChange","contacts","handleSubmit","e","preventDefault","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","required","min","_c","$RefreshReg$"],"sources":["/Users/giovannimasala/Desktop/Coding Projects/appointment-planner-starting-v18/src/components/appointmentForm/AppointmentForm.js"],"sourcesContent":["import React from \"react\";\r\nimport ContactPicker from \"../contactPicker/ContactPicker\";\r\n\r\nconst getTodayString = () => {\r\n  const [month, day, year] = new Date().toLocaleDateString(\"en-US\").split(\"/\");\r\n  return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n};\r\n\r\nexport const AppointmentForm = ({\r\n  name,\r\n  contact,\r\n  date,\r\n  time,\r\n  onSubmit, // The callback function to handle form submission\r\n  handleChange,\r\n  contacts, // Assuming contacts prop for ContactPicker\r\n}) => {\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault(); // Prevent default form submission\r\n\r\n    // Optional: Add form validation logic here\r\n    // ... validation logic (e.g., check for empty fields)\r\n\r\n    // Call the provided onSubmit prop function with form data\r\n    onSubmit({ name, contact, date, time }); // Assuming props hold form data\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <label htmlFor=\"contact\">Contact</label>\r\n        <ContactPicker contacts={contacts} handleChange={handleChange} />\r\n        <label htmlFor=\"date\">Date</label>\r\n        <input\r\n          type=\"date\" // Use type=\"date\" for date picker\r\n          id=\"date\"\r\n          name=\"date\"\r\n          value={date}\r\n          onChange={handleChange}\r\n          min={getTodayString()} // Set minimum date to today\r\n          required\r\n        />\r\n        <label htmlFor=\"time\">Time</label>\r\n        <input\r\n          type=\"time\"\r\n          id=\"time\"\r\n          name=\"time\"\r\n          value={time}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input type=\"submit\" value=\"Add Appointment\" />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}